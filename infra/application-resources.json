{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "webappname": {
            "type": "string",
            "defaultValue": "-api"
        },
        "webappserviceplanname": {
            "type": "string",
            "defaultValue": "-asp"
        },
        "appinsightsname": {
            "type": "string",
            "defaultValue": "-insights"
        },
        "keyvaultname": {
            "type": "string",
            "defaultValue": "vault"
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "-vnet"
        },
        "applicationGatewayName": {
            "type": "string",
            "defaultValue": "-gw"
        },
        "publicIpAddressName": {
            "type": "string",
            "defaultValue": "-gw-pip"
        },
        "apimgmtname": {
            "type": "string",
            "defaultValue": "-apimgmt"
        },
        "cosmosdbaccount": {
            "type": "string",
            "defaultValue": "cosmosdb"
        },
        "publicIpAddressNameDomainNameLabel": {
            "type": "string"
        },
        "apimgmtadminmail": {
            "type": "string"
        },
        "apimgmtorg": {
            "type": "string"
        },
        "logworkspacename": {
            "type": "string",
            "defaultValue": "-logspace"
        },
        "resourcenameprefix": {
            "type": "string",
            "defaultValue": "javademoapp-test"
        },
        "resourcenamepostfix": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "webappname": "[concat(parameters('resourcenameprefix'), parameters('webappname'), parameters('resourcenamepostfix'))]",
        "webappserviceplanname": "[concat(parameters('resourcenameprefix'), parameters('webappserviceplanname'), parameters('resourcenamepostfix'))]",
        "appinsightsname": "[concat(parameters('resourcenameprefix'), parameters('appinsightsname'), parameters('resourcenamepostfix'))]",
        "keyvaultname": "[concat(parameters('resourcenameprefix'), parameters('keyvaultname'), parameters('resourcenamepostfix'))]",
        "virtualNetworkName": "[concat(parameters('resourcenameprefix'), parameters('virtualNetworkName'), parameters('resourcenamepostfix'))]",
        "applicationGatewayName": "[concat(parameters('resourcenameprefix'), parameters('applicationGatewayName'), parameters('resourcenamepostfix'))]",
        "publicIpAddressName": "[concat(parameters('resourcenameprefix'), parameters('publicIpAddressName'), parameters('resourcenamepostfix'))]",
        "apimgmtname": "[concat(parameters('resourcenameprefix'), parameters('apimgmtname'), parameters('resourcenamepostfix'))]",
        "cosmosdbaccount": "[concat(parameters('resourcenameprefix'), parameters('cosmosdbaccount'), parameters('resourcenamepostfix'))]",
        "logworkspacename": "[concat(parameters('resourcenameprefix'), parameters('logworkspacename'), parameters('resourcenamepostfix'))]",

        "publicIpAddressNameDomainNameLabel": "[parameters('publicIpAddressNameDomainNameLabel')]",
        "apimgmtadminmail": "[parameters('apimgmtadminmail')]",
        "apimgmtorg": "[parameters('apimgmtorg')]",

        "managed-id-name": "jvw-managed-id",

        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]",
        "appGWSubnetRef": "[concat(variables('vnetId'), '/subnets/', 'AppGWSubnet')]",
        "apiMGMTSubnetRef": "[concat(variables('vnetId'), '/subnets/', 'ApiMgmtSubnet')]",
        "appSubnetRef": "[concat(variables('vnetId'), '/subnets/', 'AppTier')]",
        "applicationGatewayId": "[resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName'))]",
        "appgwprivateip": "10.0.1.200"
    },
    "resources": [
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2019-08-01",
            "name": "[variables('webappname')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', variables('webappserviceplanname'))]"
            ],
            "tags": {
            },
            "properties": {
                "name": "[variables('webappname')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "-key-goes-here"
                        },
                        {
                            "name": "COSMOSMONGOCONNECTIONSTRING",
                            "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyvaultname'), 'cosmosmongoconnectionstring')).secretUriWithVersion, ')')]"
                        },
                        {
                            "name": "JAVA_OPTS",
                            "value": "-Dspring.profiles.active=azuretest -javaagent:/home/site/wwwroot/applicationinsights-agent-2.6.0-BETA.2.jar"
                        },
                        {
                            "name": "KEYVAULTURI",
                            "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyvaultname')), '2019-09-01').vaultUri]"
                        }
                    ],
                    "linuxFxVersion": "JAVA|8-jre8",
                    "alwaysOn": true
                },
                "serverFarmId": "[concat('/subscriptions/', subscription().subscriptionId ,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('webappserviceplanname'))]",
                "hostingEnvironment": "",
                "clientAffinityEnabled": false,
                "httpsOnly": true
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "resources": [
                {
                    "name": "virtualNetwork",
                    "type": "config",
                    "apiVersion": "2018-02-01",
                    "location": "westeurope",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('webappname'))]",
                        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
                    ],
                    "properties": {
                        "subnetResourceId": "[variables('appSubnetRef')]",
                        "swiftSupported": true
                    }
                },
                {
                    "type": "providers/diagnosticSettings",
                    "name": "[concat('Microsoft.Insights/', 'log-analytics-pusher')]",
                    "apiVersion": "2017-05-01-preview",
                    "properties": {
                        "name": "log-analytics-pusher",
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logworkspacename'))]",
                        "logs": [
                            {
                                "category": "AppServiceHTTPLogs",
                                "enabled": true
                            },
                            {
                                "category": "AppServiceConsoleLogs",
                                "enabled": true
                            },
                            {
                                "category": "AppServiceAppLogs",
                                "enabled": true
                            },
                            {
                                "category": "AppServiceFileAuditLogs",
                                "enabled": true
                            },
                            {
                                "category": "AppServiceAuditLogs",
                                "enabled": true
                            }
                        ],
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true
                            }
                        ]
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logworkspacename'))]",
                        "[concat('Microsoft.Web/sites/', variables('webappname'))]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('managed-id-name')]",
            "apiVersion": "2018-11-30",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2019-08-01",
            "name": "[concat(variables('webappname'), '/web')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('webappname'))]"
            ],
            "properties": {
                "linuxFxVersion": "JAVA|8-jre8",
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "[concat(reference(resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName')),'2017-11-01').ipAddress,'/32')]",
                        "action": "Allow",
                        "tag": "Default",
                        "priority": 100,
                        "name": "AllowOnlyAppGWTraffic",
                        "description": "Only allow traffic from the Application Gateway"
                    },
                    {
                        "ipAddress": "Any",
                        "action": "Deny",
                        "priority": 2147483647,
                        "name": "Deny all",
                        "description": "Deny all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "minTlsVersion": "1.2",
                "ftpsState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2019-08-01",
            "name": "[variables('webappserviceplanname')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
            ],
            "tags": {
            },
            "sku": {
                "Tier": "PremiumV2",
                "Name": "P1v2"
            },
            "kind": "linux",
            "properties": {
                "name": "[variables('webappserviceplanname')]",
                "workerSize": "3",
                "workerSizeId": "3",
                "numberOfWorkers": "1",
                "reserved": true,
                "hostingEnvironment": ""
            }
        },
        {
            "name": "[variables('appinsightsname')]",
            "type": "Microsoft.Insights/components",
            "apiVersion": "2018-05-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Application insights for app"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('webappname'))]"
            ],
            "properties": {
                "applicationId": "[resourceId('Microsoft.Web/sites', variables('webappname'))]",
                "application_Type": "web"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "name": "[concat(variables('keyVaultName'), '/add')]",
            "apiVersion": "2018-02-14",
            "properties": {
                "accessPolicies": [
                    {
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('webappname')), '2019-08-01', 'Full').identity.principalId]",
                        "tenantId": "[subscription().tenantId]",
                        "permissions": {
                            "keys": [
                            ],
                            "secrets": [
                                "Get",
                                "List"
                            ],
                            "certificates": [
                            ]
                        },
                        "applicationId": null
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-09-01",
            "name": "[variables('keyvaultname')]",
            "location": "westeurope",
            "type": "Microsoft.KeyVault/vaults",
            "properties": {
                "enabledForDeployment": false,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": false,
                "enableRbacAuthorization": false,
                "accessPolicies": [
                ],
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "name": "Premium",
                    "family": "A"
                },
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enablePurgeProtection": true,
                "networkAcls": {
                    "defaultAction": "allow",
                    "bypass": "AzureServices",
                    "ipRules": [
                    ],
                    "virtualNetworkRules": [
                    ]
                }
            },
            "tags": {
            },
            "dependsOn": [
            ],
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "name": "[concat('Microsoft.Insights/', 'log-analytics-pusher')]",
                    "apiVersion": "2017-05-01-preview",
                    "properties": {
                        "name": "log-analytics-pusher",
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logworkspacename'))]",
                        "logs": [
                            {
                                "category": "AuditEvent",
                                "enabled": true
                            }
                        ],
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true
                            }
                        ]
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logworkspacename'))]",
                        "[concat('Microsoft.KeyVault/vaults/', variables('keyvaultname'))]"
                    ]
                }
            ]
        },
        {
            "name": "[concat(variables('keyvaultname'),'/cosmosmongoconnectionstring')]",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2018-02-14",
            "tags": {
            },
            "properties": {
                "value": "[concat('mongodb://', variables('cosmosdbaccount'), ':', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosdbaccount')), '2015-04-08').primaryMasterKey, '@', variables('cosmosdbaccount'), '.documents.azure.com:10250/?ssl=true')]"
            },
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('keyvaultname'))]",
                "[concat('Microsoft.DocumentDb/databaseAccounts/', variables('cosmosdbaccount'))]"
            ]
        },
        {
            "name": "[concat(variables('keyvaultname'),'/msisecret')]",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2018-02-14",
            "tags": {
            },
            "properties": {
                "value": "this-is-the-msi-secret"
            },
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('keyvaultname'))]",
                "[concat('Microsoft.DocumentDb/databaseAccounts/', variables('cosmosdbaccount'))]"
            ]
        },
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/VirtualNetworks",
            "apiVersion": "2019-09-01",
            "location": "westeurope",
            "dependsOn": [
            ],
            "tags": {
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "ApiMgmtSubnet",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        }
                    },
                    {
                        "name": "AppGWSubnet",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24"
                        }
                    },
                    {
                        "name": "AppTier",
                        "properties": {
                            "addressPrefix": "10.0.2.0/24",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Web",
                                    "locations": [
                                        "westeurope"
                                    ]
                                },
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "westeurope"
                                    ]
                                },
                                {
                                    "service": "Microsoft.AzureCosmosDB",
                                    "locations": [
                                        "westeurope"
                                    ]
                                },
                                {
                                    "service": "Microsoft.Sql",
                                    "locations": [
                                        "westeurope"
                                    ]
                                },
                                {
                                    "service": "Microsoft.Storage",
                                    "locations": [
                                        "westeurope"
                                    ]
                                }
                            ],
                            "delegations": [
                                {
                                    "name": "delegation",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverfarms"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "enableDdosProtection": false
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "name": "[concat('Microsoft.Insights/', 'log-analytics-pusher')]",
                    "apiVersion": "2017-05-01-preview",
                    "properties": {
                        "name": "log-analytics-pusher",
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logworkspacename'))]",
                        "logs": [
                            {
                                "category": "VMProtectionAlerts",
                                "enabled": true
                            }
                        ],
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true
                            }
                        ]
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logworkspacename'))]",
                        "[concat('Microsoft.Network/VirtualNetworks/', variables('virtualNetworkName'))]"
                    ]
                }
            ]
        },
        {
            "name": "[variables('applicationGatewayName')]",
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-09-01",
            "location": "westeurope",
            "zones": [
                "1",
                "2",
                "3"
            ],
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]"
            ],
            "tags": {
            },
            "properties": {
                "sku": {
                    "name": "WAF_v2",
                    "tier": "WAF_v2"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('appGWSubnetRef')]",
                                "appid": "[variables('appGWSubnetRef')]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIp",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[variables('publicIPRef')]"
                            }
                        }
                    },
                    {
                        "name": "appGwPrivateFrontendIp",
                        "properties": {
                            "subnet": {
                                "id": "[variables('appGWSubnetRef')]",
                                "appid": "[variables('appGWSubnetRef')]"
                            },
                            "privateIPAddress": "[variables('appgwprivateip')]",
                            "privateIPAllocationMethod": "Static"
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_80",
                        "properties": {
                            "Port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "appservicebackend",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "[reference(resourceId('Microsoft.Web/sites', variables('webappname')), '2019-08-01').defaultHostName]"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "DefaultHttpSetting",
                        "properties": {
                            "Port": 443,
                            "Protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "requestTimeout": 20,
                            "pickHostNameFromBackendAddress": true,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/probes/appserviceinfoprobe')]"
                            }
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "InternalListener",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('applicationGatewayId'), '/frontendIPConfigurations/appGwPrivateFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(variables('applicationGatewayId'), '/frontendPorts/port_80')]"
                            },
                            "protocol": "Http",
                            "sslCertificate": null
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "Name": "InternalRule",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('applicationGatewayId'), '/httpListeners/InternalListener')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/appservicebackend')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/DefaultHttpSetting')]"
                            }
                        }
                    }
                ],
                "enableHttp2": false,
                "sslCertificates": [
                ],
                "probes": [
                    {
                        "name": "appserviceinfoprobe",
                        "properties": {
                            "protocol": "Https",
                            "path": "/info",
                            "interval": 30,
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": true,
                            "minServers": 0,
                            "match": {
                            }
                        }
                    }
                ],
                "autoscaleConfiguration": {
                    "minCapacity": "0",
                    "maxCapacity": "2"
                },
                "webApplicationFirewallConfiguration": {
                    "enabled": true,
                    "firewallMode": "Prevention",
                    "ruleSetType": "OWASP",
                    "ruleSetVersion": "3.0"
                },
                "sslPolicy": {
                    "policyType": "Predefined",
                    "policyName": "AppGwSslPolicy20170401S"
                }
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "name": "[concat('Microsoft.Insights/', 'log-analytics-pusher')]",
                    "apiVersion": "2017-05-01-preview",
                    "properties": {
                        "name": "log-analytics-pusher",
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logworkspacename'))]",
                        "logs": [
                            {
                                "category": "ApplicationGatewayAccessLog",
                                "enabled": true
                            },
                            {
                                "category": "ApplicationGatewayPerformanceLog",
                                "enabled": true
                            },
                            {
                                "category": "ApplicationGatewayFirewallLog",
                                "enabled": true
                            }
                        ],
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true
                            }
                        ]
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logworkspacename'))]",
                        "[concat('Microsoft.Network/applicationGateways/', variables('applicationGatewayName'))]"
                    ]
                }
            ]
        },
        {
            "apiVersion": "2019-02-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIpAddressName')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[variables('publicIpAddressNameDomainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service",
            "apiVersion": "2019-01-01",
            "name": "[variables('apimgmtname')]",
            "location": "westeurope",
            "sku": {
                "name": "Developer",
                "capacity": "1"
            },
            "properties": {
                "publisherEmail": "[variables('apimgmtadminmail')]",
                "publisherName": "[variables('apimgmtorg')]",
                "virtualNetworkConfiguration": {
                    "subnetResourceId": "[variables('apiMGMTSubnetRef')]"
                },
                "virtualNetworkType": "External"
            },
            "resources": [
                {
                    "type": "loggers",
                    "apiVersion": "2019-01-01",
                    "name": "[variables('appinsightsname')]",
                    "dependsOn": [
                        "[concat('Microsoft.ApiManagement/service/', variables('apimgmtname'))]"
                    ],
                    "properties": {
                        "loggerType": "applicationInsights",
                        "resourceId": "[resourceId('Microsoft.Insights/components', variables('appinsightsname'))]",
                        "credentials": {
                            "instrumentationKey": "[reference(resourceId('Microsoft.Insights/components', variables('appinsightsname')), '2018-05-01-preview').InstrumentationKey]"
                        }
                    }
                },
                {
                    "type": "diagnostics",
                    "apiVersion": "2019-01-01",
                    "name": "applicationinsights",
                    "dependsOn": [
                        "[concat('Microsoft.ApiManagement/service/', variables('apimgmtname'))]",
                        "[concat('Microsoft.ApiManagement/service/', variables('apimgmtname'), '/loggers/', variables('appinsightsname'))]"
                    ],
                    "properties": {
                        "loggerId": "[concat('/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/', variables('apimgmtname'), '/loggers/', variables('appinsightsname'))]",
                        "alwaysLog": "allErrors",
                        "sampling": {
                            "percentage": 100,
                            "samplingType": "fixed"
                        }
                    }
                },
                   {
                    "type": "providers/diagnosticSettings",
                    "name": "[concat('Microsoft.Insights/', 'log-analytics-pusher')]",
                    "apiVersion": "2017-05-01-preview",
                    "properties": {
                        "name": "log-analytics-pusher",
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logworkspacename'))]",
                        "logs": [
                            {
                                "category": "GatewayLogs",
                                "enabled": true
                            }
                        ],
                        "metrics": [
                            {
                                "category": "Gateway Requests",
                                "enabled": true
                            },
                            {
                                "category": "Capacity",
                                "enabled": true
                            },
                            {
                                "category": "EventHub Events",
                                "enabled": true
                            }
                        ]
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logworkspacename'))]",
                        "[concat('Microsoft.ApiManagement/service/', variables('apimgmtname'))]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2019-01-01",
            "name": "[concat(variables('apimgmtname'), '/api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', concat(variables('apimgmtname')))]"
            ],
            "properties": {
                "displayName": "api",
                "apiRevision": "1",
                "subscriptionRequired": true,
                "serviceUrl": "[concat('http://', variables('appgwprivateip'))]",
                "protocols": [
                    "https"
                ],
                "isCurrent": true,
                "path": "/"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(variables('apimgmtname'), '/api/get')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apimgmtname'), 'api')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apimgmtname'))]"
            ],
            "properties": {
                "displayName": "GET",
                "method": "GET",
                "urlTemplate": "/greeting",
                "templateParameters": [
                ],
                "responses": [
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(variables('apimgmtname'), '/api/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apimgmtname'), 'api')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apimgmtname'))]"
            ],
            "properties": {
                "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n    <cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\" downstream-caching-type=\"none\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <cache-store duration=\"60\" />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "apiVersion": "2019-12-12",
            "kind": "GlobalDocumentDB",
            "type": "Microsoft.DocumentDb/databaseAccounts",
            "name": "[variables('cosmosdbaccount')]",
            "location": "westeurope",
            "properties": {
                "databaseAccountOfferType": "Standard",
                "locations": [
                    {
                        "id": "[concat(variables('cosmosdbaccount'), '-', 'westeurope')]",
                        "failoverPriority": 0,
                        "locationName": "westeurope"
                    },
                    {
                        "id": "[concat(variables('cosmosdbaccount'), '-', 'northeurope')]",
                        "failoverPriority": 1,
                        "locationName": "northeurope"
                    }
                ],
                "enableMultipleWriteLocations": true,
                "isVirtualNetworkFilterEnabled": true,
                "virtualNetworkRules": [
                    {
                        "id": "[variables('appSubnetRef')]"
                    }
                ],
                "ipRangeFilter": "104.42.195.92,40.76.54.131,52.176.6.30,52.169.50.45,52.187.184.26,213.127.31.86",
                "dependsOn": [
                ],
                "capabilities": [
                ]
            },
            "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": ""
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2017-03-15-preview",
            "name": "[variables('logworkspacename')]",
            "location": "westeurope",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "features": {
                    "searchVersion": "1"
                }
            }
        }
    ],
    "outputs": {
        "webappname": {
            "type": "string",
            "value": "[variables('webappname')]"
        },
        "webappurl": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Web/sites', variables('webappname')), '2019-08-01').defaultHostName]"
        },
        "webappidentity": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Web/sites', variables('webappname')), '2019-08-01', 'Full').identity.principalId]"
        },
        "webappserviceplanname": {
            "type": "string",
            "value": "[variables('webappserviceplanname')]"
        },
        "appinsightsname": {
            "type": "string",
            "value": "[variables('appinsightsname')]"
        },
        "appinsightskey": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Insights/components', variables('appinsightsname')), '2018-05-01-preview').InstrumentationKey]"
        },
        "keyvaulturl": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyvaultname')), '2019-09-01').vaultUri]"
        }
    },
    "functions": [
    ]
}
